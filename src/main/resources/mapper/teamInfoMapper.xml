<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.aynu.onlineRegistrationSystem.mapper.teamInfoMapper">
  <resultMap id="BaseResultMap" type="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfo">
    <id column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="team_name" jdbcType="VARCHAR" property="teamName" />
    <result column="team_account" jdbcType="VARCHAR" property="teamAccount" />
    <result column="team_password" jdbcType="VARCHAR" property="teamPassword" />
    <result column="mem_id1" jdbcType="INTEGER" property="memId1" />
    <result column="mem_id2" jdbcType="INTEGER" property="memId2" />
    <result column="mem_id3" jdbcType="INTEGER" property="memId3" />
    <result column="team_email" jdbcType="VARCHAR" property="teamEmail" />
  </resultMap>

  <select id="selectByTeamAccount" parameterType="String" resultMap="BaseResultMap">
    select team_account from team_info where team_account=#{team_account}
  </select>
  <update id="joinTeam">
    update team_info set
    <choose>
      <when test="team.memId1==null or team.memId1==''">
        mem_id1=#{memId} where team_id=#{team.teamId}
      </when>
      <otherwise>
        <choose>
          <when test="team.memId2==null or team.memId2==''">
             mem_id2=#{memId} where team_id=#{team.teamId}
          </when>
            <otherwise>
              mem_id3=#{memId} where team_id=#{team.teamId}
            </otherwise>
        </choose>
      </otherwise>
    </choose>

  </update>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    team_id, team_name, team_account, team_password, mem_id1, mem_id2, mem_id3, team_email
  </sql>
  <select id="selectByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from team_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from team_info
    where team_id = #{teamId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team_info
    where team_id = #{teamId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfoExample">
    delete from team_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfo">
    insert into team_info (team_id, team_name, team_account, 
      team_password, mem_id1, mem_id2, 
      mem_id3, team_email)
    values (#{teamId,jdbcType=INTEGER}, #{teamName,jdbcType=VARCHAR}, #{teamAccount,jdbcType=VARCHAR}, 
      #{teamPassword,jdbcType=VARCHAR}, #{memId1,jdbcType=INTEGER}, #{memId2,jdbcType=INTEGER}, 
      #{memId3,jdbcType=INTEGER}, #{teamEmail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfo">
    insert into team_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teamId != null">
        team_id,
      </if>
      <if test="teamName != null">
        team_name,
      </if>
      <if test="teamAccount != null">
        team_account,
      </if>
      <if test="teamPassword != null">
        team_password,
      </if>
      <if test="memId1 != null">
        mem_id1,
      </if>
      <if test="memId2 != null">
        mem_id2,
      </if>
      <if test="memId3 != null">
        mem_id3,
      </if>
      <if test="teamEmail != null">
        team_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="teamName != null">
        #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="teamAccount != null">
        #{teamAccount,jdbcType=VARCHAR},
      </if>
      <if test="teamPassword != null">
        #{teamPassword,jdbcType=VARCHAR},
      </if>
      <if test="memId1 != null">
        #{memId1,jdbcType=INTEGER},
      </if>
      <if test="memId2 != null">
        #{memId2,jdbcType=INTEGER},
      </if>
      <if test="memId3 != null">
        #{memId3,jdbcType=INTEGER},
      </if>
      <if test="teamEmail != null">
        #{teamEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfoExample" resultType="java.lang.Long">
    select count(*) from team_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update team_info
    <set>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=INTEGER},
      </if>
      <if test="record.teamName != null">
        team_name = #{record.teamName,jdbcType=VARCHAR},
      </if>
      <if test="record.teamAccount != null">
        team_account = #{record.teamAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.teamPassword != null">
        team_password = #{record.teamPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.memId1 != null">
        mem_id1 = #{record.memId1,jdbcType=INTEGER},
      </if>
      <if test="record.memId2 != null">
        mem_id2 = #{record.memId2,jdbcType=INTEGER},
      </if>
      <if test="record.memId3 != null">
        mem_id3 = #{record.memId3,jdbcType=INTEGER},
      </if>
      <if test="record.teamEmail != null">
        team_email = #{record.teamEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update team_info
    set team_id = #{record.teamId,jdbcType=INTEGER},
      team_name = #{record.teamName,jdbcType=VARCHAR},
      team_account = #{record.teamAccount,jdbcType=VARCHAR},
      team_password = #{record.teamPassword,jdbcType=VARCHAR},
      mem_id1 = #{record.memId1,jdbcType=INTEGER},
      mem_id2 = #{record.memId2,jdbcType=INTEGER},
      mem_id3 = #{record.memId3,jdbcType=INTEGER},
      team_email = #{record.teamEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfo">
    update team_info
    <set>
      <if test="teamName != null">
        team_name = #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="teamAccount != null">
        team_account = #{teamAccount,jdbcType=VARCHAR},
      </if>
      <if test="teamPassword != null">
        team_password = #{teamPassword,jdbcType=VARCHAR},
      </if>
      <if test="memId1 != null">
        mem_id1 = #{memId1,jdbcType=INTEGER},
      </if>
      <if test="memId2 != null">
        mem_id2 = #{memId2,jdbcType=INTEGER},
      </if>
      <if test="memId3 != null">
        mem_id3 = #{memId3,jdbcType=INTEGER},
      </if>
      <if test="teamEmail != null">
        team_email = #{teamEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfo">
    update team_info
    set team_name = #{teamName,jdbcType=VARCHAR},
      team_account = #{teamAccount,jdbcType=VARCHAR},
      team_password = #{teamPassword,jdbcType=VARCHAR},
      mem_id1 = #{memId1,jdbcType=INTEGER},
      mem_id2 = #{memId2,jdbcType=INTEGER},
      mem_id3 = #{memId3,jdbcType=INTEGER},
      team_email = #{teamEmail,jdbcType=VARCHAR}
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
</mapper>