<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.aynu.onlineRegistrationSystem.mapper.teamMatchMapper">
  <resultMap id="BaseResultMap" type="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="match_id" jdbcType="INTEGER" property="matchId" />
  </resultMap>

  <resultMap id="AppleResultMap" type="cn.edu.aynu.onlineRegistrationSystem.entity.MatchAppleInfo">
    <id column="team_info.match_id" jdbcType="INTEGER" property="matchId" />
    <result column="match_title" property="matchTitle" />
    <collection  property="teamInfo" ofType="cn.edu.aynu.onlineRegistrationSystem.entity.teamInfo">
      <id property="teamId" column="team_id"></id>
      <result property="teamName" column="team_name"></result>
      <result property="teamId" column="team_id"></result>
      <result property="memId1" column="mem_id1"></result>
      <result property="memId2" column="mem_id2"></result>
      <result property="memId3" column="mem_id3"></result>
    </collection >
  </resultMap>

  <select id="getTeamMatchInfoByMatchId" resultMap="AppleResultMap">
        select * from match_info,team_info,team_match where match_info.match_id=team_match.match_id AND team_match.team_id=team_info.team_id AND match_info.match_id=#{teamId};
  </select>

  <select id="getJoinedTeamByMatchId" resultType="int" parameterType="int">
    select team_id from team_match where match_id=#{id}
  </select>
  <select id="checkExistInTeamMatch" parameterType="int" resultType="int">
    select count(*) from team_match where match_id=#{match_id} and team_id=#{team_id}
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, team_id, match_id
  </sql>
  <select id="selectByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from team_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from team_match
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team_match
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatchExample">
    delete from team_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatch">
    insert into team_match (id, team_id, match_id
      )
    values (#{id,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, #{matchId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatch">
    insert into team_match
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="matchId != null">
        match_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="matchId != null">
        #{matchId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatchExample" resultType="java.lang.Long">
    select count(*) from team_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update team_match
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=INTEGER},
      </if>
      <if test="record.matchId != null">
        match_id = #{record.matchId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update team_match
    set id = #{record.id,jdbcType=INTEGER},
      team_id = #{record.teamId,jdbcType=INTEGER},
      match_id = #{record.matchId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatch">
    update team_match
    <set>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="matchId != null">
        match_id = #{matchId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.teamMatch">
    update team_match
    set team_id = #{teamId,jdbcType=INTEGER},
      match_id = #{matchId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>