<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.aynu.onlineRegistrationSystem.mapper.memInfoMapper">
  <resultMap id="BaseResultMap" type="cn.edu.aynu.onlineRegistrationSystem.entity.memInfo">
    <id column="mem_id" jdbcType="INTEGER" property="memId" />
    <result column="mem_name" jdbcType="VARCHAR" property="memName" />
    <result column="mem_email" jdbcType="VARCHAR" property="memEmail" />
    <result column="mem_sex" jdbcType="CHAR" property="memSex" />
    <result column="mem_password" jdbcType="VARCHAR" property="memPassword" />
  </resultMap>
  <select id="getMemInfoByIds" parameterType="list" resultMap="BaseResultMap">
    select mem_id,mem_name,mem_email,mem_sex from mem_info
    <where>
      <foreach collection="ids" item="id" open="and mem_id in(" close=")" separator=",">
        #{id}
      </foreach>
    </where>
  </select>
  <select id="getMemeberByTeamId" resultMap="BaseResultMap" parameterType="int">
    select mem_id from team_info,mem_info where
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mem_id, mem_name, mem_email, mem_sex, mem_password
  </sql>
  <select id="selectByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mem_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mem_info
    where mem_id = #{memId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mem_info
    where mem_id = #{memId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfoExample">
    delete from mem_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfo">
    insert into mem_info (mem_id, mem_name, mem_email, 
      mem_sex, mem_password)
    values (#{memId,jdbcType=INTEGER}, #{memName,jdbcType=VARCHAR}, #{memEmail,jdbcType=VARCHAR}, 
      #{memSex,jdbcType=CHAR}, #{memPassword,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfo">
    insert into mem_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memId != null">
        mem_id,
      </if>
      <if test="memName != null">
        mem_name,
      </if>
      <if test="memEmail != null">
        mem_email,
      </if>
      <if test="memSex != null">
        mem_sex,
      </if>
      <if test="memPassword != null">
        mem_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memId != null">
        #{memId,jdbcType=INTEGER},
      </if>
      <if test="memName != null">
        #{memName,jdbcType=VARCHAR},
      </if>
      <if test="memEmail != null">
        #{memEmail,jdbcType=VARCHAR},
      </if>
      <if test="memSex != null">
        #{memSex,jdbcType=CHAR},
      </if>
      <if test="memPassword != null">
        #{memPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfoExample" resultType="java.lang.Long">
    select count(*) from mem_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mem_info
    <set>
      <if test="record.memId != null">
        mem_id = #{record.memId,jdbcType=INTEGER},
      </if>
      <if test="record.memName != null">
        mem_name = #{record.memName,jdbcType=VARCHAR},
      </if>
      <if test="record.memEmail != null">
        mem_email = #{record.memEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.memSex != null">
        mem_sex = #{record.memSex,jdbcType=CHAR},
      </if>
      <if test="record.memPassword != null">
        mem_password = #{record.memPassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mem_info
    set mem_id = #{record.memId,jdbcType=INTEGER},
      mem_name = #{record.memName,jdbcType=VARCHAR},
      mem_email = #{record.memEmail,jdbcType=VARCHAR},
      mem_sex = #{record.memSex,jdbcType=CHAR},
      mem_password = #{record.memPassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfo">
    update mem_info
    <set>
      <if test="memName != null">
        mem_name = #{memName,jdbcType=VARCHAR},
      </if>
      <if test="memEmail != null">
        mem_email = #{memEmail,jdbcType=VARCHAR},
      </if>
      <if test="memSex != null">
        mem_sex = #{memSex,jdbcType=CHAR},
      </if>
      <if test="memPassword != null">
        mem_password = #{memPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where mem_id = #{memId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.aynu.onlineRegistrationSystem.entity.memInfo">
    update mem_info
    set mem_name = #{memName,jdbcType=VARCHAR},
      mem_email = #{memEmail,jdbcType=VARCHAR},
      mem_sex = #{memSex,jdbcType=CHAR},
      mem_password = #{memPassword,jdbcType=VARCHAR}
    where mem_id = #{memId,jdbcType=INTEGER}
  </update>
</mapper>